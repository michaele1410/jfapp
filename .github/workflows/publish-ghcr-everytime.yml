name: Publish Docker image to GHCR on Push or Release

on:
  push:
    branches:
      - main
  release:
    types: [published]

jobs:
  push_to_ghcr:
    name: Build and push Docker image to GHCR
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=ref,event=tag

      - name: Set APP_VERSION environment variable
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "APP_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF}" == refs/heads/* ]]; then
            echo "APP_VERSION=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          else
            echo "APP_VERSION=dev" >> $GITHUB_ENV
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push Docker image (multi-arch)
        uses: docker/build-push-action@v5
        with:
          context: ./web
          file: ./web/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            APP_VERSION=${{ env.APP_VERSION }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache